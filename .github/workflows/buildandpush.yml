# This is a basic workflow to help you get started with Actions

name: Build and Push

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  # Allows you to run this workflow manually from the Actions tab
  release:
    types:
      - published

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - 
        name: Check out
        uses: actions/checkout@v2
      -
        name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          # list of Docker images to use as base name for tags
          images: |
            registry.jvdt.dev:5001/jordyjordy/dndbot-bot
          # generate Docker tags based on the following events/attributes
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha
      - 
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to Registry
        uses: docker/login-action@v1
        with:
          registry: registry.jvdt.dev:5001
          username: ${{ secrets.DOCKER_REGISTRY_USER }}
          password: ${{ secrets.DOCKER_REGISTRY_PASS }}  
#           username: ${{ github.repository_owner }}
#           password: ${{ secrets.GITHUB_TOKEN }}
      -
        name: Build and push bot
        uses: docker/build-push-action@v2
        with:
          context: ./bot
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          push: true
          file: ./bot/Dockerfile
      - name: Create env file
        run: | 
          touch ./client/.env
          echo VUE_APP_SERVER_IP = ${{secrets.VUE_APP_SERVER_IP}} >> ./client/.env
          echo ${{ steps.meta.outputs.labels }}
      -
        name: Docker meta
        id: meta2
        uses: docker/metadata-action@v3
        with:
          # list of Docker images to use as base name for tags
          images: |
            registry.jvdt.dev:5001/jordyjordy/dndbot-client
          # generate Docker tags based on the following events/attributes
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha
      -
        name: Build and push client
        env:
          VUE_APP_SERVER_IP: https://dndbotserver.jordyvandertang.nl:5000
        uses: docker/build-push-action@v2
        with:
          context: ./client
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          push: true
          file: ./client/Dockerfile   
      -
        name: Docker meta
        id: meta3
        uses: docker/metadata-action@v3
        with:
          # list of Docker images to use as base name for tags
          images: |
            registry.jvdt.dev:5001/jordyjordy/dndbot-server
          # generate Docker tags based on the following events/attributes
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha
      -
        name: Build and push server
        uses: docker/build-push-action@v2
        with:
          context: ./server
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          push: true
          file: ./server/Dockerfile
